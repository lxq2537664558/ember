#This is the main, static ember config file. All of these values can be overridden by a "ember.conf" file placed in the ember home directory (i.e. ~/.config/ember/ember.conf on linux)

[paths]
#The path where all shared data is installed. Only alter this if you know what you're doing.
#sharedir = "/usr/local/share/forge"
#The path where all local user data is installed. Only alter this if you know what you're doing.
#datadir = "~/.ember"

[media]
#if true, all media will be preloaded upon startup, resulting in a longer startup time, but avoiding ingame stuttering when media is requested
preloadmedia=false
#if true, all media catalogs will be searched recursive. This takes some time at startup, but is needed for media authoring
loadmediarecursive = true
#a list of extra resource locations to look in for resources. These will be added in addition to those found in resources.cfg
#Use ";" as separator between multiple locations. For example: extraresourcelocations="/home/foo/media;/home/foo/morestuff"
extraresourcelocations=""

[audio]
output = surround
#determines whether the audio is enabled or not
enabled=true

[graphics]
#graphics level to use. Valid values are high, medium, low
level = medium
#if set to true, and your GPU can handle it, water will be shown using pixel shaders, making for a very realistic effect
fresnelwater = false
#if set to true, the ground will be covered with foliage. Note that this requires that your card supports vertex shaders.
foliage = true
#the main camera clip distances, in the format "[near distance] [far distance]"
clipdistances="0.5 10000.0"
#A comma separated list of Ogre compositors to use. For example: "compositors=Bloom"
compositors=Bloom
#if set to true, the client will try to automatically adjust graphics settings to achieve the desired fps
autoadjust = false
#the percentage density of the foliage covering the ground when foliage is enabled.
foliagedensity = "100.0"
#the furthest distance foliage is visible at as a percentage of the default far distance of the foliage.
foliagefardistance = "100.0"
#the lod bias of the main camera, this affects the level of detail of all models and materials visible.
lodbias = "100.0"
#the maximum render distance that client renders till as a percentage of the maximum clip distance.
renderdistance = "100.0"

[ogre]
#the path to the ogre plugin directory. Ember will try to find the plugins by itself, but if it fails you can set the path here yourself.
#plugindir="/usr/lib/OGRE/"
#the plugins to load. This will differ some on windows and unix
#plugins="RenderSystem_GL,RenderSystem_Direct3D9,Plugin_ParticleFX,Plugin_CgProgramManager"
plugins="RenderSystem_GL,Plugin_ParticleFX,Plugin_CgProgramManager"
#if set to true, the config dialog won't be shown and the settings in ogre.cfg will be used instead
suppressconfigdialog = false
#if set to true, the application will be double buffered, which means that everything is rendered into a separate backbuffer, which is then copied to the main screen buffer when appropriate. This will in some cases reduce tearing.
doublebuffered = false
#controls the Ogre log level. Possible values are "low", "normal" and "boreme". Note that the standard log level is still applied, so if you want to see all logs through setting "boreme" you should also alter "general:logginglevel".
loglevel="normal" 

[shadows]
#The texture size of each of the shadow textures (we normally use 5 shadow textures).
#First three is for Parallel Split (PSSM) shadows from directional light (Sun usually).
#Others are for point lights
texturesize=1024
#Configure splitting scheme for PSSM shadows.
splitpoints="1 15 50 200"
#Set the padding to apply to the near & far distances when matching up splits to one another, to avoid 'cracks'.
splitpadding=10
#Adjust the parameter to produce optimal shadows.
optimaladjustfactors="1 1 1"
#Sets whether or not to use the more aggressive approach to deciding on the focus region or not.
useaggressivefocusregion=true
#The max far distance of the shadows, in world units.
fardistance=200
#Whether we should render back faces when generating the shadow texture. This should normally be on.
renderbackfaces=true
#the lod bias percentage of all shadow cameras, this affects the level of detail of the shadow by affecting the mesh used to render the shadows.
#This will only work for the shadow of the meshes that already have lower level of detail meshes added for it.
shadowlodbias = "100.0"

[cegui]
#the minimum log level to activate for CEGUI. Possible values are insane|informative|standard|warnings|errors
#"standard" is recommended, anything below will cause massive amounts of logging
#if you really want to see what's happening deep within CEGUI set it to "insane" and prepare for the deluge
#note that what's finally written to the ember.log is determined by the global log level setting as set in "general:logginglevel".
#"verbose" includes both "insane" and "informative", "info" is "standard", "warning" is "warnings" and "failure" is "errors"
#also note that the "insane" level will only apply if CEGUI has been built in debug mode
minimumlogginglevel = standard

[terrain]
#sets how much to scale the alpha maps for the terrain, resulting in smoother terrain splatting, but requiring more memory
#must be an integer 1 or 2 or 4 or 8 or 16 etc.
scalealphamap = 1

#if true, debug LOD colours will be used on the terrain to better see how the LOD system works
usedebuglodcolors = false

#the preferred terrain technique. Available values are: ShaderNormalMapped, Shader, Base
preferredtechnique = Shader

#The size of single terrain pages. Should be one of 64, 128, 256, 512.
pagesize = "256"

#The distance from the camera at which terrain pages are loaded. Affects how fast the initial loading is as well as the memory usage and performance in-game.
loadradius = "300"

[caelum]
#a colour value (rgba) for how much the ambient light should be multiplied
sunambientmultiplier="0.7 0.7 0.7 1"
#a colour value (rgba) for how much the diffuse light should be multiplied
sundiffusemultiplier="2 2 1.7 1"
#a colour value (rgba) for how much the specular light should be multiplied
sunspecularmultiplier="5 5 5 1"

cloudspeed="0.0005 -0.0009"
cloudblendtime=2160000
cloudcover=0.3

[authoring]
#shows authoring visualizations for entities
visualizations=false
#allows you to automatically load and show a certain mesh in the asset manager at start. The main use would be for inspecting meshes as they are authored.
#This is normally not set here but instead injected at the command line when starting up Ember.
#loadmesh=path_in_the_resource_system
#Shows the "inspect" menu alternative even for non admin characters
showinspectforall=false

[ingamechatwidget]
#how long the chat bubbles will be shown
timeshown = 30
#how far away the chat bubbles will be shown
distanceshown = 30

[tree]
#if set to true, ember will autogenerate the trees
#the current implementation requires a very powerful GPU
#not currently used though
usedynamictrees = false

[input]
#how many degrees camera should pitch and yaw per mouse unit. One mouse unit represents moving the cursor from the left to the right border of the screen.
degreespermouseunit = 180
#if true, the pitch of the camera will be inverted. Useful for people that are used to flight simulators
invertcamera = false
#sets the max speed. Note that the server ultimately places restrictions on how fast you are allowed to move. The walk speed would normally be half of the max speed.
maxspeed = 5
#if true, the camera will be adjusted to the terrain so that it never dips below the surface
adjusttoterrain = true
#when moving something on the terrain and the camera is moved, Ember only performs a new intersection check after a certain interval, as expressed here in milliseconds
terraincheckinterval=100
#If true, Ember will catch the mouse. This means that the mouse cursor won't be able to move beyond the Ember window.
catchmouse=true
#The max time, in milliseconds, to wait between a mouse press and release to consider a "click". This only applies when clicking on the world; i.e. it has no effect on the GUI.
clickthreshold=200
#if true, Ember will automatically enter "movement mode" when entering world
automovementmode=true

[lua]
#if true, the lua debug library will be loaded
debug = true

[metaserver]
#if set to true, Ember will connect to the Meta Server at startup
enabled=true
#the hostname of the Meta Server
server=metaserver.worldforge.org
#If specified, Ember will connect to this server at startup automatically
#autoconnect=amber.worldforge.org
#If set to something, the server browser will filter out all servers with versions lower than this. This is to prevent new users from connecting to old stale servers.
minimumversion=0.5.20
#If set to something, the server browser will filter out all servers with the number of entities lower than this. This is to prevent new users from connecting to uninitialized servers.
minimumentitycount=20

[wfut]
#if true, Ember will use wfut to download updated media at startup
enabled=true
#the path to the wfut repository
server=http://amber.worldforge.org/WFUT/
#the name of the media channel
channel=ember-media-@VERSION@

[general]
#if true, the startup help window will be shown at startup
startuphelp=false
#determines how many milliseconds to wait between updates of the avatar's rotation is sent to the server
#this is not done instantly to prevent swamping of data to the server
#set this lower if you experience too jerky game play
avatarrotationupdatefrequency=250
#the level of logging, either verbose|info|warning|failure|critical
logginglevel=info
#whether detailed logging should be enabled or not
loggingdetailed=false
#the latest version
version=@VERSION@
# default chat logging to on
logchatmessages=true
#file name where server settings are stored. The path is relative to the Ember home config directory.
#serversettings="serversettings.conf"
#desired frames per second. If the hardware is fast enough to be able to provide higher fps Ember will sleep enough to make sure that the fps is kept around the desired number.
#setting this to 0 will disable the fps capping.
#the main advantage of this is to prevent Ember from completely starving the system, when most fps over 60 aren't recognizable by users
desiredfps=60
#allows you to specify a local cyphesis socket to connect to. If nothing is specified Ember will look for the socket at PREFIX/var/tmp/cyphesis_cyphesis.sock
#socket=/path/to/cyphesis_cyphesis.sock



[key_bindings_general]
#these bindings apply all the time
f6 = "/toggle_cameraattached"
f7 = "/toggle_rendermode"
f8 = "/toggle_fullscreen"
f9 = "/toggle_avatar_follows_camera"
f10 = "/toggle_gui"
print = "/screenshot"
caps = "/toggle_inputmode"
left_ctrl = "+snaptomovement"

[key_bindings_movement]
#these bindings apply when in movement mode
s = "+movement_move_backward"
w = "+movement_move_forward"
a = "+movement_strafe_left"
d = "+movement_strafe_right"
r = "+movement_move_upwards"
f = "+movement_move_downwards"
space = "+movement_move_upwards"
tab = "/console_focus"
return = "/console_focus"
1 = "/actionbar_1"
2 = "/actionbar_2"
3 = "/actionbar_3"
4 = "/actionbar_4"
5 = "/actionbar_5"

i = "/show_inventory"

#down = "+camera_zoom_out"
#left = "+camera_rotate_left"
#page_down = "+camera_elevate_up"
#page_up = "+camera_elevate_down"
#right = "+camera_rotate_right"
#up = "+camera_zoom_in"

left_shift = "+walk"
right_shift = "+walk"


[key_bindings_gui]
#these bindings apply when in gui mode
tab = "/console_focus"

